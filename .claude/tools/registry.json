{
  "toolRegistry": {
    "version": "1.0.0",
    "lastUpdated": "2025-07-06T20:15:00Z",
    "tools": {
      "Agent": {
        "name": "Agent",
        "version": "1.0.0",
        "type": "orchestration",
        "category": "ai-coordination",
        "description": "Advanced AI agent orchestration and coordination tool for SPARC framework",
        "capabilities": [
          "agent-spawning",
          "agent-coordination",
          "memory-management",
          "task-distribution",
          "parallel-execution",
          "lifecycle-management"
        ],
        "inputSchema": {
          "type": "object",
          "properties": {
            "action": {
              "type": "string",
              "enum": ["spawn", "coordinate", "terminate", "status", "communicate", "distribute"],
              "description": "The action to perform with the agent system"
            },
            "agentType": {
              "type": "string",
              "enum": [
                "orchestrator", "swarm-coordinator", "workflow-manager", "batch-executor",
                "coder", "architect", "reviewer", "tester", "tdd", "debugger",
                "researcher", "analyzer", "optimizer",
                "designer", "innovator", "documenter", "memory-manager"
              ],
              "description": "Type of SPARC agent to work with"
            },
            "agentName": {
              "type": "string",
              "description": "Unique identifier for the agent instance"
            },
            "task": {
              "type": "string",
              "description": "Task description or coordination instruction"
            },
            "coordination": {
              "type": "object",
              "properties": {
                "mode": {
                  "type": "string",
                  "enum": ["hierarchical", "distributed", "parallel", "pipeline", "swarm"],
                  "description": "Coordination pattern to use"
                },
                "agents": {
                  "type": "array",
                  "items": {"type": "string"},
                  "description": "List of agents to coordinate"
                },
                "memoryKey": {
                  "type": "string",
                  "description": "Shared memory key for coordination"
                },
                "maxAgents": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 10,
                  "description": "Maximum number of concurrent agents"
                },
                "timeout": {
                  "type": "integer",
                  "description": "Timeout in seconds for coordination"
                }
              }
            },
            "communication": {
              "type": "object",
              "properties": {
                "protocol": {
                  "type": "string",
                  "enum": ["memory-shared", "event-driven", "todo-based", "direct"],
                  "description": "Communication protocol to use"
                },
                "data": {
                  "type": "object",
                  "description": "Data to communicate between agents"
                },
                "broadcast": {
                  "type": "boolean",
                  "description": "Whether to broadcast to all agents"
                }
              }
            }
          },
          "required": ["action"],
          "additionalProperties": false
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "description": "Whether the operation was successful"
            },
            "agentId": {
              "type": "string",
              "description": "ID of the created or managed agent"
            },
            "status": {
              "type": "string",
              "description": "Current status of the operation"
            },
            "result": {
              "type": "object",
              "description": "Result data from the operation"
            },
            "coordinationState": {
              "type": "object",
              "description": "Current coordination state information"
            },
            "agents": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {"type": "string"},
                  "type": {"type": "string"},
                  "status": {"type": "string"},
                  "memoryKey": {"type": "string"}
                }
              },
              "description": "List of active agents"
            },
            "metadata": {
              "type": "object",
              "description": "Additional metadata about the operation"
            }
          }
        },
        "implementation": {
          "type": "script",
          "path": ".claude/tools/agent-tool.js",
          "runtime": "node",
          "timeout": 300000,
          "retryAttempts": 3
        },
        "dependencies": [
          "Memory",
          "TodoWrite",
          "TodoRead",
          "Bash"
        ],
        "coordination": {
          "enabled": true,
          "memoryNamespace": "agent-coordination",
          "eventBus": true,
          "stateManagement": true
        },
        "permissions": {
          "spawn": true,
          "coordinate": true,
          "communicate": true,
          "memory": "read-write",
          "tools": "restricted"
        },
        "monitoring": {
          "metricsCollection": true,
          "performanceTracking": true,
          "errorHandling": true,
          "alerting": true
        }
      },
      "AgentSpawner": {
        "name": "AgentSpawner",
        "version": "1.0.0",
        "type": "utility",
        "category": "ai-coordination",
        "description": "Utility tool for spawning individual SPARC agents with specific configurations",
        "capabilities": ["agent-creation", "configuration-management", "validation"],
        "inputSchema": {
          "type": "object",
          "properties": {
            "agentType": {
              "type": "string",
              "enum": [
                "orchestrator", "swarm-coordinator", "workflow-manager", "batch-executor",
                "coder", "architect", "reviewer", "tester", "tdd", "debugger",
                "researcher", "analyzer", "optimizer",
                "designer", "innovator", "documenter", "memory-manager"
              ]
            },
            "configuration": {
              "type": "object",
              "properties": {
                "name": {"type": "string"},
                "memoryKey": {"type": "string"},
                "tools": {"type": "array", "items": {"type": "string"}},
                "timeout": {"type": "integer"},
                "priority": {"type": "string", "enum": ["low", "medium", "high"]}
              }
            }
          },
          "required": ["agentType"]
        },
        "implementation": {
          "type": "script",
          "path": ".claude/tools/agent-spawner.js"
        }
      },
      "AgentCoordinator": {
        "name": "AgentCoordinator",
        "version": "1.0.0",
        "type": "orchestration",
        "category": "ai-coordination",
        "description": "High-level coordination tool for managing multiple agents in complex workflows",
        "capabilities": ["multi-agent-coordination", "workflow-orchestration", "resource-allocation"],
        "inputSchema": {
          "type": "object",
          "properties": {
            "workflow": {
              "type": "object",
              "properties": {
                "name": {"type": "string"},
                "stages": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {"type": "string"},
                      "agents": {"type": "array", "items": {"type": "string"}},
                      "tasks": {"type": "array", "items": {"type": "string"}},
                      "dependencies": {"type": "array", "items": {"type": "string"}},
                      "parallel": {"type": "boolean"}
                    }
                  }
                }
              }
            }
          }
        },
        "implementation": {
          "type": "script",
          "path": ".claude/tools/agent-coordinator.js"
        }
      }
    },
    "categories": {
      "ai-coordination": {
        "description": "Tools for AI agent coordination and orchestration",
        "tools": ["Agent", "AgentSpawner", "AgentCoordinator"]
      }
    },
    "integrations": {
      "claude-flow": {
        "enabled": true,
        "toolDiscovery": true,
        "autoRegistration": true,
        "coordinationSupport": true
      },
      "sparc": {
        "enabled": true,
        "modeIntegration": true,
        "memoryIntegration": true,
        "workflowIntegration": true
      }
    },
    "configuration": {
      "defaultTimeout": 300,
      "maxConcurrentAgents": 10,
      "memoryNamespace": "agent-coordination",
      "loggingLevel": "info",
      "metricsCollection": true
    }
  }
}